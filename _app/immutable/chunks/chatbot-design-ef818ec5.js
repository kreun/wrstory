import{S as di,i as gi,s as ni,k as v,q as L,a as u,l as E,m as e,r as I,h as f,c as b,n as Ll,C as lt,p as ft,b as _,E as i,B as pi}from"./index-07efb363.js";/* empty css                                           */function it(ai){let q,If,Il,w,sf,sl,Rl,pl,p,mi,ml,Bl,Hl,S,Rf,rl,Ul,xl,yl,ql,m,pf,mf,Bf,Hf,rf,Cl,wl,Sl,k,Uf,kl,Dl,Gl,Ml,Pl,D,xf,Vl,B,Q,yf,qf,T,Cf,wf,W,Sf,jl,zl,Al,G,kf,Fl,H,X,Df,Gf,Y,Mf,Pf,Z,Vf,Jl,Kl,Nl,M,jf,Ol,r,$,zf,Af,o,Ff,Jf,h,Kf,Ql,Tl,Wl,P,Nf,Xl,R,c,Of,Qf,a,Tf,Wf,d,Xf,Yf,g,Zf,Yl,Zl,$l,V,$f,ol,U,n,of,hf,ll,cf,af,fl,df,hl,cl,al,j,gf,dl,gl,nl,lf,ff,s,il,nf,li,tl,fi,ii,_l,ti,_i,vl,vi,Ei,El,ui,tf,_f,vf,z,bi,Ef,uf,bf,ef,Lf,x,ul,ei,Li,bl,Ii,si,el,Ri;return{c(){q=v("h1"),If=L("챗봇 설계"),Il=u(),w=v("div"),sf=L("2023-01-07 11:14"),sl=u(),Rl=v("br"),pl=u(),p=v("img"),ml=u(),Bl=v("br"),Hl=u(),S=v("h2"),Rf=L("01. 시나리오 분석"),rl=u(),Ul=v("hr"),xl=u(),yl=v("br"),ql=u(),m=v("p"),pf=L("시나리오 흐름이 텍스트로 정의된 경우에, 대화의 흐름이 어떻게 진행되는지 파악하기 어렵습니다."),mf=v("br"),Bf=L(`
텍스트로 구성된 시나리오의 흐름을 오픈빌더 구축에 맞게 재배치하고, 블럭이 어떻게 생성되는지 확인 할 수 있도록 다이어그램으로 표시합니다.`),Hf=v("br"),rf=L(`
단순한 형태일 수록 좋지만, 모든 흐름에 빠진 부분이 없도록 하고, 해당 흐름을 바탕으로 테스트를 진행할 수 있어야 합니다.`),Cl=u(),wl=v("br"),Sl=u(),k=v("h2"),Uf=L("02. 주요 설계 요소"),kl=u(),Dl=v("hr"),Gl=u(),Ml=v("br"),Pl=u(),D=v("h3"),xf=L("블럭의 연결 구조 확인"),Vl=u(),B=v("ul"),Q=v("li"),yf=L("① 블럭의 연결은 사용자 발화, 혹은 UI를 통한 블럭 연결입니다."),qf=u(),T=v("li"),Cf=L("② 엔티티에 따른 설계 요소를 확인해야 합니다."),wf=u(),W=v("li"),Sf=L("③ 동적 블럭 생성은 챗봇 서버를 이용합니다."),jl=u(),zl=v("br"),Al=u(),G=v("h3"),kf=L("대화형 시나리오 확인"),Fl=u(),H=v("ul"),X=v("li"),Df=L("◻ 대화형 시나리오 설계시 예상하지 못한 사용자의 답변에 대해서 준비해야 합니다."),Gf=u(),Y=v("li"),Mf=L("◻ 대화형 시나리오는 오픈빌더에서 구현하기 어렵습니다."),Pf=u(),Z=v("li"),Vf=L("◻ 대화형 시나리오가 필요하다면, 다이얼로그플로우의 사용을 검토합니다."),Jl=u(),Kl=v("br"),Nl=u(),M=v("h3"),jf=L("오픈빌더에서 사용자 입력 받기"),Ol=u(),r=v("ul"),$=v("li"),zf=L("◻ 오픈빌더의 경우에 필수파라미터를 이용해서 사용자 입력을 받습니다."),Af=u(),o=v("li"),Ff=L("◻ 사용자 발화나, 블럭 링크 방식과 다르게 처리해야 합니다."),Jf=u(),h=v("li"),Kf=L("◻ 인터랙션에 제한이 있으며, 해당 제한 사항으로 흐름이 끊어지지 않도록 합니다."),Ql=u(),Tl=v("br"),Wl=u(),P=v("h3"),Nf=L("사용자 입력 검증하기"),Xl=u(),R=v("ul"),c=v("li"),Of=L("◻ 입력 형식이 정해진 경우에는 챗봇 서버를 이용해서 입력 형태를 검증합니다."),Qf=u(),a=v("li"),Tf=L("◻ 모든 내용이 입력된 이후에 검증하게 되면, 처음부터 다시 입력해야 합니다."),Wf=u(),d=v("li"),Xf=L("◻ 잘못된 입력에 대해서 적절한 피드백을 제공합니다."),Yf=u(),g=v("li"),Zf=L("◻ 사용자의 실수가 아닌 다양한 표현방식을 받을 수 있어야 합니다."),Yl=u(),Zl=v("br"),$l=u(),V=v("h3"),$f=L("챗봇 서버로 데이터 보내기"),ol=u(),U=v("ul"),n=v("li"),of=L("◻ 입력된 데이터는 서버로 전송됩니다."),hf=u(),ll=v("li"),cf=L("◻ 챗봇 서버에서는 해당 데이터를 이용해서 응답 데이터를 전송합니다."),af=u(),fl=v("li"),df=L("◻ 응답 형식이 아닌 데이터 형식을 전송할 수 있습니다."),hl=u(),cl=v("br"),al=u(),j=v("h2"),gf=L("03. 블럭 생성"),dl=u(),gl=v("hr"),nl=u(),lf=v("br"),ff=u(),s=v("ul"),il=v("li"),nf=L("설계에 따라 오픈빌더의 블럭을 생성합니다."),li=u(),tl=v("li"),fi=L("구조적인 문제 발생시 설계를 변경합니다."),ii=u(),_l=v("li"),ti=L("오픈빌더에서 구현하기 어려운 시나리오는 다이얼로그플로우를 사용합니다."),_i=u(),vl=v("li"),vi=L("오픈빌더는 컨텍스트 구조로 대화를 제어할 수 없습니다."),Ei=u(),El=v("li"),ui=L("가능은 하지만, 오픈빌더의 복잡성이 올라가고, 개발시간이 길어지게 됩니다."),tf=u(),_f=v("br"),vf=u(),z=v("h2"),bi=L("04. 테스트"),Ef=u(),uf=v("hr"),bf=u(),ef=v("br"),Lf=u(),x=v("ul"),ul=v("li"),ei=L("◻ 오류가 없는 일반적인 챗봇 흐름을 모두 테스트 합니다."),Li=u(),bl=v("li"),Ii=L("◻ 오류가 있거나, 반복적인 흐름이 있는 블럭을 테스트 합니다."),si=u(),el=v("li"),Ri=L("◻ 테스트 데이터를 기록하며, 공유합니다."),this.h()},l(l){q=E(l,"H1",{});var t=e(q);If=I(t,"챗봇 설계"),t.forEach(f),Il=b(l),w=E(l,"DIV",{class:!0});var Bi=e(w);sf=I(Bi,"2023-01-07 11:14"),Bi.forEach(f),sl=b(l),Rl=E(l,"BR",{}),pl=b(l),p=E(l,"IMG",{src:!0,style:!0,width:!0,height:!0,alt:!0}),ml=b(l),Bl=E(l,"BR",{}),Hl=b(l),S=E(l,"H2",{});var Hi=e(S);Rf=I(Hi,"01. 시나리오 분석"),Hi.forEach(f),rl=b(l),Ul=E(l,"HR",{}),xl=b(l),yl=E(l,"BR",{}),ql=b(l),m=E(l,"P",{});var A=e(m);pf=I(A,"시나리오 흐름이 텍스트로 정의된 경우에, 대화의 흐름이 어떻게 진행되는지 파악하기 어렵습니다."),mf=E(A,"BR",{}),Bf=I(A,`
텍스트로 구성된 시나리오의 흐름을 오픈빌더 구축에 맞게 재배치하고, 블럭이 어떻게 생성되는지 확인 할 수 있도록 다이어그램으로 표시합니다.`),Hf=E(A,"BR",{}),rf=I(A,`
단순한 형태일 수록 좋지만, 모든 흐름에 빠진 부분이 없도록 하고, 해당 흐름을 바탕으로 테스트를 진행할 수 있어야 합니다.`),A.forEach(f),Cl=b(l),wl=E(l,"BR",{}),Sl=b(l),k=E(l,"H2",{});var ri=e(k);Uf=I(ri,"02. 주요 설계 요소"),ri.forEach(f),kl=b(l),Dl=E(l,"HR",{}),Gl=b(l),Ml=E(l,"BR",{}),Pl=b(l),D=E(l,"H3",{});var Ui=e(D);xf=I(Ui,"블럭의 연결 구조 확인"),Ui.forEach(f),Vl=b(l),B=E(l,"UL",{});var F=e(B);Q=E(F,"LI",{});var xi=e(Q);yf=I(xi,"① 블럭의 연결은 사용자 발화, 혹은 UI를 통한 블럭 연결입니다."),xi.forEach(f),qf=b(F),T=E(F,"LI",{});var yi=e(T);Cf=I(yi,"② 엔티티에 따른 설계 요소를 확인해야 합니다."),yi.forEach(f),wf=b(F),W=E(F,"LI",{});var qi=e(W);Sf=I(qi,"③ 동적 블럭 생성은 챗봇 서버를 이용합니다."),qi.forEach(f),F.forEach(f),jl=b(l),zl=E(l,"BR",{}),Al=b(l),G=E(l,"H3",{});var Ci=e(G);kf=I(Ci,"대화형 시나리오 확인"),Ci.forEach(f),Fl=b(l),H=E(l,"UL",{});var J=e(H);X=E(J,"LI",{});var wi=e(X);Df=I(wi,"◻ 대화형 시나리오 설계시 예상하지 못한 사용자의 답변에 대해서 준비해야 합니다."),wi.forEach(f),Gf=b(J),Y=E(J,"LI",{});var Si=e(Y);Mf=I(Si,"◻ 대화형 시나리오는 오픈빌더에서 구현하기 어렵습니다."),Si.forEach(f),Pf=b(J),Z=E(J,"LI",{});var ki=e(Z);Vf=I(ki,"◻ 대화형 시나리오가 필요하다면, 다이얼로그플로우의 사용을 검토합니다."),ki.forEach(f),J.forEach(f),Jl=b(l),Kl=E(l,"BR",{}),Nl=b(l),M=E(l,"H3",{});var Di=e(M);jf=I(Di,"오픈빌더에서 사용자 입력 받기"),Di.forEach(f),Ol=b(l),r=E(l,"UL",{});var K=e(r);$=E(K,"LI",{});var Gi=e($);zf=I(Gi,"◻ 오픈빌더의 경우에 필수파라미터를 이용해서 사용자 입력을 받습니다."),Gi.forEach(f),Af=b(K),o=E(K,"LI",{});var Mi=e(o);Ff=I(Mi,"◻ 사용자 발화나, 블럭 링크 방식과 다르게 처리해야 합니다."),Mi.forEach(f),Jf=b(K),h=E(K,"LI",{});var Pi=e(h);Kf=I(Pi,"◻ 인터랙션에 제한이 있으며, 해당 제한 사항으로 흐름이 끊어지지 않도록 합니다."),Pi.forEach(f),K.forEach(f),Ql=b(l),Tl=E(l,"BR",{}),Wl=b(l),P=E(l,"H3",{});var Vi=e(P);Nf=I(Vi,"사용자 입력 검증하기"),Vi.forEach(f),Xl=b(l),R=E(l,"UL",{});var C=e(R);c=E(C,"LI",{});var ji=e(c);Of=I(ji,"◻ 입력 형식이 정해진 경우에는 챗봇 서버를 이용해서 입력 형태를 검증합니다."),ji.forEach(f),Qf=b(C),a=E(C,"LI",{});var zi=e(a);Tf=I(zi,"◻ 모든 내용이 입력된 이후에 검증하게 되면, 처음부터 다시 입력해야 합니다."),zi.forEach(f),Wf=b(C),d=E(C,"LI",{});var Ai=e(d);Xf=I(Ai,"◻ 잘못된 입력에 대해서 적절한 피드백을 제공합니다."),Ai.forEach(f),Yf=b(C),g=E(C,"LI",{});var Fi=e(g);Zf=I(Fi,"◻ 사용자의 실수가 아닌 다양한 표현방식을 받을 수 있어야 합니다."),Fi.forEach(f),C.forEach(f),Yl=b(l),Zl=E(l,"BR",{}),$l=b(l),V=E(l,"H3",{});var Ji=e(V);$f=I(Ji,"챗봇 서버로 데이터 보내기"),Ji.forEach(f),ol=b(l),U=E(l,"UL",{});var N=e(U);n=E(N,"LI",{});var Ki=e(n);of=I(Ki,"◻ 입력된 데이터는 서버로 전송됩니다."),Ki.forEach(f),hf=b(N),ll=E(N,"LI",{});var Ni=e(ll);cf=I(Ni,"◻ 챗봇 서버에서는 해당 데이터를 이용해서 응답 데이터를 전송합니다."),Ni.forEach(f),af=b(N),fl=E(N,"LI",{});var Oi=e(fl);df=I(Oi,"◻ 응답 형식이 아닌 데이터 형식을 전송할 수 있습니다."),Oi.forEach(f),N.forEach(f),hl=b(l),cl=E(l,"BR",{}),al=b(l),j=E(l,"H2",{});var Qi=e(j);gf=I(Qi,"03. 블럭 생성"),Qi.forEach(f),dl=b(l),gl=E(l,"HR",{}),nl=b(l),lf=E(l,"BR",{}),ff=b(l),s=E(l,"UL",{});var y=e(s);il=E(y,"LI",{});var Ti=e(il);nf=I(Ti,"설계에 따라 오픈빌더의 블럭을 생성합니다."),Ti.forEach(f),li=b(y),tl=E(y,"LI",{});var Wi=e(tl);fi=I(Wi,"구조적인 문제 발생시 설계를 변경합니다."),Wi.forEach(f),ii=b(y),_l=E(y,"LI",{});var Xi=e(_l);ti=I(Xi,"오픈빌더에서 구현하기 어려운 시나리오는 다이얼로그플로우를 사용합니다."),Xi.forEach(f),_i=b(y),vl=E(y,"LI",{});var Yi=e(vl);vi=I(Yi,"오픈빌더는 컨텍스트 구조로 대화를 제어할 수 없습니다."),Yi.forEach(f),Ei=b(y),El=E(y,"LI",{});var Zi=e(El);ui=I(Zi,"가능은 하지만, 오픈빌더의 복잡성이 올라가고, 개발시간이 길어지게 됩니다."),Zi.forEach(f),y.forEach(f),tf=b(l),_f=E(l,"BR",{}),vf=b(l),z=E(l,"H2",{});var $i=e(z);bi=I($i,"04. 테스트"),$i.forEach(f),Ef=b(l),uf=E(l,"HR",{}),bf=b(l),ef=E(l,"BR",{}),Lf=b(l),x=E(l,"UL",{});var O=e(x);ul=E(O,"LI",{});var oi=e(ul);ei=I(oi,"◻ 오류가 없는 일반적인 챗봇 흐름을 모두 테스트 합니다."),oi.forEach(f),Li=b(O),bl=E(O,"LI",{});var hi=e(bl);Ii=I(hi,"◻ 오류가 있거나, 반복적인 흐름이 있는 블럭을 테스트 합니다."),hi.forEach(f),si=b(O),el=E(O,"LI",{});var ci=e(el);Ri=I(ci,"◻ 테스트 데이터를 기록하며, 공유합니다."),ci.forEach(f),O.forEach(f),this.h()},h(){Ll(w,"class","blog-info"),lt(p.src,mi="/images-blog/98/챗봇설계-1.png")||Ll(p,"src",mi),ft(p,"text-align","center"),Ll(p,"width","500px"),Ll(p,"height","50px"),Ll(p,"alt","화이트래빗스토리")},m(l,t){_(l,q,t),i(q,If),_(l,Il,t),_(l,w,t),i(w,sf),_(l,sl,t),_(l,Rl,t),_(l,pl,t),_(l,p,t),_(l,ml,t),_(l,Bl,t),_(l,Hl,t),_(l,S,t),i(S,Rf),_(l,rl,t),_(l,Ul,t),_(l,xl,t),_(l,yl,t),_(l,ql,t),_(l,m,t),i(m,pf),i(m,mf),i(m,Bf),i(m,Hf),i(m,rf),_(l,Cl,t),_(l,wl,t),_(l,Sl,t),_(l,k,t),i(k,Uf),_(l,kl,t),_(l,Dl,t),_(l,Gl,t),_(l,Ml,t),_(l,Pl,t),_(l,D,t),i(D,xf),_(l,Vl,t),_(l,B,t),i(B,Q),i(Q,yf),i(B,qf),i(B,T),i(T,Cf),i(B,wf),i(B,W),i(W,Sf),_(l,jl,t),_(l,zl,t),_(l,Al,t),_(l,G,t),i(G,kf),_(l,Fl,t),_(l,H,t),i(H,X),i(X,Df),i(H,Gf),i(H,Y),i(Y,Mf),i(H,Pf),i(H,Z),i(Z,Vf),_(l,Jl,t),_(l,Kl,t),_(l,Nl,t),_(l,M,t),i(M,jf),_(l,Ol,t),_(l,r,t),i(r,$),i($,zf),i(r,Af),i(r,o),i(o,Ff),i(r,Jf),i(r,h),i(h,Kf),_(l,Ql,t),_(l,Tl,t),_(l,Wl,t),_(l,P,t),i(P,Nf),_(l,Xl,t),_(l,R,t),i(R,c),i(c,Of),i(R,Qf),i(R,a),i(a,Tf),i(R,Wf),i(R,d),i(d,Xf),i(R,Yf),i(R,g),i(g,Zf),_(l,Yl,t),_(l,Zl,t),_(l,$l,t),_(l,V,t),i(V,$f),_(l,ol,t),_(l,U,t),i(U,n),i(n,of),i(U,hf),i(U,ll),i(ll,cf),i(U,af),i(U,fl),i(fl,df),_(l,hl,t),_(l,cl,t),_(l,al,t),_(l,j,t),i(j,gf),_(l,dl,t),_(l,gl,t),_(l,nl,t),_(l,lf,t),_(l,ff,t),_(l,s,t),i(s,il),i(il,nf),i(s,li),i(s,tl),i(tl,fi),i(s,ii),i(s,_l),i(_l,ti),i(s,_i),i(s,vl),i(vl,vi),i(s,Ei),i(s,El),i(El,ui),_(l,tf,t),_(l,_f,t),_(l,vf,t),_(l,z,t),i(z,bi),_(l,Ef,t),_(l,uf,t),_(l,bf,t),_(l,ef,t),_(l,Lf,t),_(l,x,t),i(x,ul),i(ul,ei),i(x,Li),i(x,bl),i(bl,Ii),i(x,si),i(x,el),i(el,Ri)},p:pi,i:pi,o:pi,d(l){l&&f(q),l&&f(Il),l&&f(w),l&&f(sl),l&&f(Rl),l&&f(pl),l&&f(p),l&&f(ml),l&&f(Bl),l&&f(Hl),l&&f(S),l&&f(rl),l&&f(Ul),l&&f(xl),l&&f(yl),l&&f(ql),l&&f(m),l&&f(Cl),l&&f(wl),l&&f(Sl),l&&f(k),l&&f(kl),l&&f(Dl),l&&f(Gl),l&&f(Ml),l&&f(Pl),l&&f(D),l&&f(Vl),l&&f(B),l&&f(jl),l&&f(zl),l&&f(Al),l&&f(G),l&&f(Fl),l&&f(H),l&&f(Jl),l&&f(Kl),l&&f(Nl),l&&f(M),l&&f(Ol),l&&f(r),l&&f(Ql),l&&f(Tl),l&&f(Wl),l&&f(P),l&&f(Xl),l&&f(R),l&&f(Yl),l&&f(Zl),l&&f($l),l&&f(V),l&&f(ol),l&&f(U),l&&f(hl),l&&f(cl),l&&f(al),l&&f(j),l&&f(dl),l&&f(gl),l&&f(nl),l&&f(lf),l&&f(ff),l&&f(s),l&&f(tf),l&&f(_f),l&&f(vf),l&&f(z),l&&f(Ef),l&&f(uf),l&&f(bf),l&&f(ef),l&&f(Lf),l&&f(x)}}}const vt={title:"카카오톡 챗봇 설계",date:"2023-01-07 11:14",desc:"카카오톡 오픈빌더를 이용한 챗봇 설계에서의 시나리오분석, 주요 설계 요소, 테스트 방법",tags:"챗봇설계,챗봇시나리오분석,챗봇시나리오테스트,오픈빌더"};class Et extends di{constructor(q){super(),gi(this,q,null,it,ni,{})}}export{Et as default,vt as metadata};
